blueprint:
  name: Window Open/Close Heating Control
  description: Turns off heating when a window is opened and restores the previous temperature when closed.
  domain: automation
  input:
    window_sensor:
      name: Window Sensor
      description: The binary sensor that detects if the window is open or closed.
      selector:
        entity:
          domain: binary_sensor
    heating_entity:
      name: Heating Entity
      description: The climate entity that controls the heating.
      selector:
        entity:
          domain: climate

trigger:
  - platform: state
    entity_id: !input window_sensor
    to: 'on'
  - platform: state
    entity_id: !input window_sensor
    to: 'off'

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input window_sensor
            state: 'on'
        sequence:
          - variables:
              previous_temperature: "{{ state_attr(!input.heating_entity, 'temperature') }}"
          - service: climate.set_hvac_mode
            target:
              entity_id: !input heating_entity
            data:
              hvac_mode: 'off'  # Turn off the heating system
      - conditions:
          - condition: state
            entity_id: !input window_sensor
            state: 'off'
        sequence:
          - service: climate.set_temperature
            target:
              entity_id: !input heating_entity
            data:
              temperature: >
                {% if previous_temperature is not none and previous_temperature | float >= 5.0 and previous_temperature | float <= 35.0 %}
                  {{ previous_temperature | float }}
                {% else %}
                  20.0  # Default temperature if previous is invalid
                {% endif %}

mode: single
